// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Packet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grSim_Packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* grSim_Packet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  grSim_Packet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_grSim_5fPacket_2eproto() {
  protobuf_AddDesc_grSim_5fPacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "grSim_Packet.proto");
  GOOGLE_CHECK(file != NULL);
  grSim_Packet_descriptor_ = file->message_type(0);
  static const int grSim_Packet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, commands_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, replacement_),
  };
  grSim_Packet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      grSim_Packet_descriptor_,
      grSim_Packet::default_instance_,
      grSim_Packet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Packet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(grSim_Packet));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_grSim_5fPacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    grSim_Packet_descriptor_, &grSim_Packet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_grSim_5fPacket_2eproto() {
  delete grSim_Packet::default_instance_;
  delete grSim_Packet_reflection_;
}

void protobuf_AddDesc_grSim_5fPacket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_grSim_5fCommands_2eproto();
  ::protobuf_AddDesc_grSim_5fReplacement_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022grSim_Packet.proto\032\024grSim_Commands.pro"
    "to\032\027grSim_Replacement.proto\"Z\n\014grSim_Pac"
    "ket\022!\n\010commands\030\001 \001(\0132\017.grSim_Commands\022\'"
    "\n\013replacement\030\002 \001(\0132\022.grSim_Replacement", 159);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grSim_Packet.proto", &protobuf_RegisterTypes);
  grSim_Packet::default_instance_ = new grSim_Packet();
  grSim_Packet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grSim_5fPacket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grSim_5fPacket_2eproto {
  StaticDescriptorInitializer_grSim_5fPacket_2eproto() {
    protobuf_AddDesc_grSim_5fPacket_2eproto();
  }
} static_descriptor_initializer_grSim_5fPacket_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int grSim_Packet::kCommandsFieldNumber;
const int grSim_Packet::kReplacementFieldNumber;
#endif  // !_MSC_VER

grSim_Packet::grSim_Packet()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_Packet)
}

void grSim_Packet::InitAsDefaultInstance() {
  commands_ = const_cast< ::grSim_Commands*>(&::grSim_Commands::default_instance());
  replacement_ = const_cast< ::grSim_Replacement*>(&::grSim_Replacement::default_instance());
}

grSim_Packet::grSim_Packet(const grSim_Packet& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grSim_Packet)
}

void grSim_Packet::SharedCtor() {
  _cached_size_ = 0;
  commands_ = NULL;
  replacement_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

grSim_Packet::~grSim_Packet() {
  // @@protoc_insertion_point(destructor:grSim_Packet)
  SharedDtor();
}

void grSim_Packet::SharedDtor() {
  if (this != default_instance_) {
    delete commands_;
    delete replacement_;
  }
}

void grSim_Packet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_Packet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return grSim_Packet_descriptor_;
}

const grSim_Packet& grSim_Packet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grSim_5fPacket_2eproto();
  return *default_instance_;
}

grSim_Packet* grSim_Packet::default_instance_ = NULL;

grSim_Packet* grSim_Packet::New() const {
  return new grSim_Packet;
}

void grSim_Packet::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_commands()) {
      if (commands_ != NULL) commands_->::grSim_Commands::Clear();
    }
    if (has_replacement()) {
      if (replacement_ != NULL) replacement_->::grSim_Replacement::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool grSim_Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_Packet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grSim_Commands commands = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_commands()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_replacement;
        break;
      }

      // optional .grSim_Replacement replacement = 2;
      case 2: {
        if (tag == 18) {
         parse_replacement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_replacement()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_Packet)
  return false;
#undef DO_
}

void grSim_Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_Packet)
  // optional .grSim_Commands commands = 1;
  if (has_commands()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->commands(), output);
  }

  // optional .grSim_Replacement replacement = 2;
  if (has_replacement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->replacement(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_Packet)
}

::google::protobuf::uint8* grSim_Packet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grSim_Packet)
  // optional .grSim_Commands commands = 1;
  if (has_commands()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->commands(), target);
  }

  // optional .grSim_Replacement replacement = 2;
  if (has_replacement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->replacement(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_Packet)
  return target;
}

int grSim_Packet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .grSim_Commands commands = 1;
    if (has_commands()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->commands());
    }

    // optional .grSim_Replacement replacement = 2;
    if (has_replacement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->replacement());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_Packet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const grSim_Packet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const grSim_Packet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void grSim_Packet::MergeFrom(const grSim_Packet& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_commands()) {
      mutable_commands()->::grSim_Commands::MergeFrom(from.commands());
    }
    if (from.has_replacement()) {
      mutable_replacement()->::grSim_Replacement::MergeFrom(from.replacement());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void grSim_Packet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_Packet::CopyFrom(const grSim_Packet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_Packet::IsInitialized() const {

  if (has_commands()) {
    if (!this->commands().IsInitialized()) return false;
  }
  if (has_replacement()) {
    if (!this->replacement().IsInitialized()) return false;
  }
  return true;
}

void grSim_Packet::Swap(grSim_Packet* other) {
  if (other != this) {
    std::swap(commands_, other->commands_);
    std::swap(replacement_, other->replacement_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata grSim_Packet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = grSim_Packet_descriptor_;
  metadata.reflection = grSim_Packet_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
