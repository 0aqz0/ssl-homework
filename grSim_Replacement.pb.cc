// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grSim_Replacement.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grSim_Replacement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* grSim_RobotReplacement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  grSim_RobotReplacement_reflection_ = NULL;
const ::google::protobuf::Descriptor* grSim_BallReplacement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  grSim_BallReplacement_reflection_ = NULL;
const ::google::protobuf::Descriptor* grSim_Replacement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  grSim_Replacement_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_grSim_5fReplacement_2eproto() {
  protobuf_AddDesc_grSim_5fReplacement_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "grSim_Replacement.proto");
  GOOGLE_CHECK(file != NULL);
  grSim_RobotReplacement_descriptor_ = file->message_type(0);
  static const int grSim_RobotReplacement_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, yellowteam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, turnon_),
  };
  grSim_RobotReplacement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      grSim_RobotReplacement_descriptor_,
      grSim_RobotReplacement::default_instance_,
      grSim_RobotReplacement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_RobotReplacement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(grSim_RobotReplacement));
  grSim_BallReplacement_descriptor_ = file->message_type(1);
  static const int grSim_BallReplacement_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, vx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, vy_),
  };
  grSim_BallReplacement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      grSim_BallReplacement_descriptor_,
      grSim_BallReplacement::default_instance_,
      grSim_BallReplacement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_BallReplacement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(grSim_BallReplacement));
  grSim_Replacement_descriptor_ = file->message_type(2);
  static const int grSim_Replacement_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, ball_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, robots_),
  };
  grSim_Replacement_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      grSim_Replacement_descriptor_,
      grSim_Replacement::default_instance_,
      grSim_Replacement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(grSim_Replacement, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(grSim_Replacement));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_grSim_5fReplacement_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    grSim_RobotReplacement_descriptor_, &grSim_RobotReplacement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    grSim_BallReplacement_descriptor_, &grSim_BallReplacement::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    grSim_Replacement_descriptor_, &grSim_Replacement::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_grSim_5fReplacement_2eproto() {
  delete grSim_RobotReplacement::default_instance_;
  delete grSim_RobotReplacement_reflection_;
  delete grSim_BallReplacement::default_instance_;
  delete grSim_BallReplacement_reflection_;
  delete grSim_Replacement::default_instance_;
  delete grSim_Replacement_reflection_;
}

void protobuf_AddDesc_grSim_5fReplacement_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027grSim_Replacement.proto\"k\n\026grSim_Robot"
    "Replacement\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\013\n\003dir"
    "\030\003 \002(\001\022\n\n\002id\030\004 \002(\r\022\022\n\nyellowteam\030\005 \002(\010\022\016"
    "\n\006turnon\030\006 \001(\010\"E\n\025grSim_BallReplacement\022"
    "\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\n\n\002vx\030\003 \002(\001\022\n\n\002vy\030"
    "\004 \002(\001\"b\n\021grSim_Replacement\022$\n\004ball\030\001 \001(\013"
    "2\026.grSim_BallReplacement\022\'\n\006robots\030\002 \003(\013"
    "2\027.grSim_RobotReplacement", 305);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grSim_Replacement.proto", &protobuf_RegisterTypes);
  grSim_RobotReplacement::default_instance_ = new grSim_RobotReplacement();
  grSim_BallReplacement::default_instance_ = new grSim_BallReplacement();
  grSim_Replacement::default_instance_ = new grSim_Replacement();
  grSim_RobotReplacement::default_instance_->InitAsDefaultInstance();
  grSim_BallReplacement::default_instance_->InitAsDefaultInstance();
  grSim_Replacement::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grSim_5fReplacement_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grSim_5fReplacement_2eproto {
  StaticDescriptorInitializer_grSim_5fReplacement_2eproto() {
    protobuf_AddDesc_grSim_5fReplacement_2eproto();
  }
} static_descriptor_initializer_grSim_5fReplacement_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int grSim_RobotReplacement::kXFieldNumber;
const int grSim_RobotReplacement::kYFieldNumber;
const int grSim_RobotReplacement::kDirFieldNumber;
const int grSim_RobotReplacement::kIdFieldNumber;
const int grSim_RobotReplacement::kYellowteamFieldNumber;
const int grSim_RobotReplacement::kTurnonFieldNumber;
#endif  // !_MSC_VER

grSim_RobotReplacement::grSim_RobotReplacement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_RobotReplacement)
}

void grSim_RobotReplacement::InitAsDefaultInstance() {
}

grSim_RobotReplacement::grSim_RobotReplacement(const grSim_RobotReplacement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grSim_RobotReplacement)
}

void grSim_RobotReplacement::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  dir_ = 0;
  id_ = 0u;
  yellowteam_ = false;
  turnon_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

grSim_RobotReplacement::~grSim_RobotReplacement() {
  // @@protoc_insertion_point(destructor:grSim_RobotReplacement)
  SharedDtor();
}

void grSim_RobotReplacement::SharedDtor() {
  if (this != default_instance_) {
  }
}

void grSim_RobotReplacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_RobotReplacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return grSim_RobotReplacement_descriptor_;
}

const grSim_RobotReplacement& grSim_RobotReplacement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grSim_5fReplacement_2eproto();
  return *default_instance_;
}

grSim_RobotReplacement* grSim_RobotReplacement::default_instance_ = NULL;

grSim_RobotReplacement* grSim_RobotReplacement::New() const {
  return new grSim_RobotReplacement;
}

void grSim_RobotReplacement::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<grSim_RobotReplacement*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(x_, turnon_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool grSim_RobotReplacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_RobotReplacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_dir;
        break;
      }

      // required double dir = 3;
      case 3: {
        if (tag == 25) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_id;
        break;
      }

      // required uint32 id = 4;
      case 4: {
        if (tag == 32) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_yellowteam;
        break;
      }

      // required bool yellowteam = 5;
      case 5: {
        if (tag == 40) {
         parse_yellowteam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yellowteam_)));
          set_has_yellowteam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_turnon;
        break;
      }

      // optional bool turnon = 6;
      case 6: {
        if (tag == 48) {
         parse_turnon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &turnon_)));
          set_has_turnon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_RobotReplacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_RobotReplacement)
  return false;
#undef DO_
}

void grSim_RobotReplacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_RobotReplacement)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double dir = 3;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dir(), output);
  }

  // required uint32 id = 4;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->id(), output);
  }

  // required bool yellowteam = 5;
  if (has_yellowteam()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->yellowteam(), output);
  }

  // optional bool turnon = 6;
  if (has_turnon()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->turnon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_RobotReplacement)
}

::google::protobuf::uint8* grSim_RobotReplacement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grSim_RobotReplacement)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double dir = 3;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dir(), target);
  }

  // required uint32 id = 4;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->id(), target);
  }

  // required bool yellowteam = 5;
  if (has_yellowteam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->yellowteam(), target);
  }

  // optional bool turnon = 6;
  if (has_turnon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->turnon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_RobotReplacement)
  return target;
}

int grSim_RobotReplacement::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 1;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 2;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // required double dir = 3;
    if (has_dir()) {
      total_size += 1 + 8;
    }

    // required uint32 id = 4;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required bool yellowteam = 5;
    if (has_yellowteam()) {
      total_size += 1 + 1;
    }

    // optional bool turnon = 6;
    if (has_turnon()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_RobotReplacement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const grSim_RobotReplacement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const grSim_RobotReplacement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void grSim_RobotReplacement::MergeFrom(const grSim_RobotReplacement& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_yellowteam()) {
      set_yellowteam(from.yellowteam());
    }
    if (from.has_turnon()) {
      set_turnon(from.turnon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void grSim_RobotReplacement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_RobotReplacement::CopyFrom(const grSim_RobotReplacement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_RobotReplacement::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void grSim_RobotReplacement::Swap(grSim_RobotReplacement* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(dir_, other->dir_);
    std::swap(id_, other->id_);
    std::swap(yellowteam_, other->yellowteam_);
    std::swap(turnon_, other->turnon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata grSim_RobotReplacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = grSim_RobotReplacement_descriptor_;
  metadata.reflection = grSim_RobotReplacement_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int grSim_BallReplacement::kXFieldNumber;
const int grSim_BallReplacement::kYFieldNumber;
const int grSim_BallReplacement::kVxFieldNumber;
const int grSim_BallReplacement::kVyFieldNumber;
#endif  // !_MSC_VER

grSim_BallReplacement::grSim_BallReplacement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_BallReplacement)
}

void grSim_BallReplacement::InitAsDefaultInstance() {
}

grSim_BallReplacement::grSim_BallReplacement(const grSim_BallReplacement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grSim_BallReplacement)
}

void grSim_BallReplacement::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  vx_ = 0;
  vy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

grSim_BallReplacement::~grSim_BallReplacement() {
  // @@protoc_insertion_point(destructor:grSim_BallReplacement)
  SharedDtor();
}

void grSim_BallReplacement::SharedDtor() {
  if (this != default_instance_) {
  }
}

void grSim_BallReplacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_BallReplacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return grSim_BallReplacement_descriptor_;
}

const grSim_BallReplacement& grSim_BallReplacement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grSim_5fReplacement_2eproto();
  return *default_instance_;
}

grSim_BallReplacement* grSim_BallReplacement::default_instance_ = NULL;

grSim_BallReplacement* grSim_BallReplacement::New() const {
  return new grSim_BallReplacement;
}

void grSim_BallReplacement::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<grSim_BallReplacement*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(x_, vy_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool grSim_BallReplacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_BallReplacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // required double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_vx;
        break;
      }

      // required double vx = 3;
      case 3: {
        if (tag == 25) {
         parse_vx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vx_)));
          set_has_vx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_vy;
        break;
      }

      // required double vy = 4;
      case 4: {
        if (tag == 33) {
         parse_vy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vy_)));
          set_has_vy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_BallReplacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_BallReplacement)
  return false;
#undef DO_
}

void grSim_BallReplacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_BallReplacement)
  // required double x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double vx = 3;
  if (has_vx()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->vx(), output);
  }

  // required double vy = 4;
  if (has_vy()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_BallReplacement)
}

::google::protobuf::uint8* grSim_BallReplacement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grSim_BallReplacement)
  // required double x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double vx = 3;
  if (has_vx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->vx(), target);
  }

  // required double vy = 4;
  if (has_vy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_BallReplacement)
  return target;
}

int grSim_BallReplacement::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required double x = 1;
    if (has_x()) {
      total_size += 1 + 8;
    }

    // required double y = 2;
    if (has_y()) {
      total_size += 1 + 8;
    }

    // required double vx = 3;
    if (has_vx()) {
      total_size += 1 + 8;
    }

    // required double vy = 4;
    if (has_vy()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_BallReplacement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const grSim_BallReplacement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const grSim_BallReplacement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void grSim_BallReplacement::MergeFrom(const grSim_BallReplacement& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_vx()) {
      set_vx(from.vx());
    }
    if (from.has_vy()) {
      set_vy(from.vy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void grSim_BallReplacement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_BallReplacement::CopyFrom(const grSim_BallReplacement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_BallReplacement::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void grSim_BallReplacement::Swap(grSim_BallReplacement* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(vx_, other->vx_);
    std::swap(vy_, other->vy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata grSim_BallReplacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = grSim_BallReplacement_descriptor_;
  metadata.reflection = grSim_BallReplacement_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int grSim_Replacement::kBallFieldNumber;
const int grSim_Replacement::kRobotsFieldNumber;
#endif  // !_MSC_VER

grSim_Replacement::grSim_Replacement()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grSim_Replacement)
}

void grSim_Replacement::InitAsDefaultInstance() {
  ball_ = const_cast< ::grSim_BallReplacement*>(&::grSim_BallReplacement::default_instance());
}

grSim_Replacement::grSim_Replacement(const grSim_Replacement& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grSim_Replacement)
}

void grSim_Replacement::SharedCtor() {
  _cached_size_ = 0;
  ball_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

grSim_Replacement::~grSim_Replacement() {
  // @@protoc_insertion_point(destructor:grSim_Replacement)
  SharedDtor();
}

void grSim_Replacement::SharedDtor() {
  if (this != default_instance_) {
    delete ball_;
  }
}

void grSim_Replacement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* grSim_Replacement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return grSim_Replacement_descriptor_;
}

const grSim_Replacement& grSim_Replacement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_grSim_5fReplacement_2eproto();
  return *default_instance_;
}

grSim_Replacement* grSim_Replacement::default_instance_ = NULL;

grSim_Replacement* grSim_Replacement::New() const {
  return new grSim_Replacement;
}

void grSim_Replacement::Clear() {
  if (has_ball()) {
    if (ball_ != NULL) ball_->::grSim_BallReplacement::Clear();
  }
  robots_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool grSim_Replacement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grSim_Replacement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grSim_BallReplacement ball = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ball()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_robots;
        break;
      }

      // repeated .grSim_RobotReplacement robots = 2;
      case 2: {
        if (tag == 18) {
         parse_robots:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robots()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_robots;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grSim_Replacement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grSim_Replacement)
  return false;
#undef DO_
}

void grSim_Replacement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grSim_Replacement)
  // optional .grSim_BallReplacement ball = 1;
  if (has_ball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ball(), output);
  }

  // repeated .grSim_RobotReplacement robots = 2;
  for (int i = 0; i < this->robots_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->robots(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:grSim_Replacement)
}

::google::protobuf::uint8* grSim_Replacement::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grSim_Replacement)
  // optional .grSim_BallReplacement ball = 1;
  if (has_ball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ball(), target);
  }

  // repeated .grSim_RobotReplacement robots = 2;
  for (int i = 0; i < this->robots_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->robots(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grSim_Replacement)
  return target;
}

int grSim_Replacement::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .grSim_BallReplacement ball = 1;
    if (has_ball()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ball());
    }

  }
  // repeated .grSim_RobotReplacement robots = 2;
  total_size += 1 * this->robots_size();
  for (int i = 0; i < this->robots_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robots(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void grSim_Replacement::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const grSim_Replacement* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const grSim_Replacement*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void grSim_Replacement::MergeFrom(const grSim_Replacement& from) {
  GOOGLE_CHECK_NE(&from, this);
  robots_.MergeFrom(from.robots_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ball()) {
      mutable_ball()->::grSim_BallReplacement::MergeFrom(from.ball());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void grSim_Replacement::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void grSim_Replacement::CopyFrom(const grSim_Replacement& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool grSim_Replacement::IsInitialized() const {

  if (has_ball()) {
    if (!this->ball().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->robots())) return false;
  return true;
}

void grSim_Replacement::Swap(grSim_Replacement* other) {
  if (other != this) {
    std::swap(ball_, other->ball_);
    robots_.Swap(&other->robots_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata grSim_Replacement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = grSim_Replacement_descriptor_;
  metadata.reflection = grSim_Replacement_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
